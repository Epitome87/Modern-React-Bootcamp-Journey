{"version":3,"sources":["Joke.jsx","JokeList.jsx","App.js","reportWebVitals.js","index.js"],"names":["React","Component","JokeList","props","state","jokes","JSON","parse","window","localStorage","getItem","handleClick","bind","this","length","getJokes","a","fetchedJokes","numJokesToFetch","axios","get","headers","Accept","joke","push","text","data","id","votes","setState","setItem","stringify","delta","updatedJokes","map","className","src","alt","onClick","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+VAGmBA,IAAMC,U,gBCInBC,E,kDAKJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAEXC,MAAOC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,WAAa,MAE7D,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBANF,E,qDASnB,WAEkC,IAA5BC,KAAKT,MAAMC,MAAMS,QACnBD,KAAKE,a,6DAIT,qCAAAC,EAAA,sDACQC,EAAe,GADvB,YAISA,EAAaH,OAASD,KAAKV,MAAMe,iBAJ1C,gCAMuBC,IAAMC,IA7BV,8BA6B4B,CACzCC,QAAS,CAAEC,OAAQ,sBAPzB,OAMUC,EANV,OAWIN,EAAaO,KAAK,CAChBC,KAAMF,EAAKG,KAAKH,KAChBI,GAAIJ,EAAKG,KAAKC,GACdC,MAAO,IAdb,sBAmBEf,KAAKgB,SAAS,CAAExB,MAAM,GAAD,mBAAMQ,KAAKT,MAAMC,OAAUY,KAAiB,kBAE/DT,OAAOC,aAAaqB,QAAQ,QAASxB,KAAKyB,UAAU,EAAK3B,MAAMC,WArBnE,gD,8EAyBA,SAAWsB,EAAIK,GAAQ,IAAD,OACdC,EAAepB,KAAKT,MAAMC,MAAM6B,KAAI,SAACX,GAAD,OACxCI,IAAOJ,EAAKI,GAAZ,2BAAsBJ,GAAtB,IAA4BK,MAAOL,EAAKK,MAAQI,IAAUT,KAG5DV,KAAKgB,SAAS,CAAExB,MAAO4B,IAAgB,kBACrCzB,OAAOC,aAAaqB,QAAQ,QAASxB,KAAKyB,UAAU,EAAK3B,MAAMC,a,yBAInE,WACEQ,KAAKE,a,oBAGP,WAcE,OACE,sBAAKoB,UAAU,WAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,qBAAIA,UAAU,kBAAd,UACE,uCADF,YAGA,qBACEC,IAAI,6FACJC,IAAI,+BAEN,wBAAQF,UAAU,sBAAsBG,QAASzB,KAAKF,YAAtD,0BAIF,qBAAKwB,UAAU,2B,GAxFAnC,IAAMC,WAAvBC,EACGqC,aAAe,CACpBrB,gBAAiB,IA4FNhB,QC1FAsC,MARf,WACE,OACE,qBAAKL,UAAU,MAAf,SACE,cAAC,EAAD,OCMSM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b565daf6.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Joke.css';\r\n\r\nclass Joke extends React.Component {\r\n  getColor() {\r\n    if (this.props.votes >= 15) {\r\n      return '#4CAF50';\r\n    } else if (this.props.votes >= 12) {\r\n      return '#8BC34A';\r\n    } else if (this.props.votes >= 9) {\r\n      return '#CDDC39';\r\n    } else if (this.props.votes >= 6) {\r\n      return '#FFEB3B';\r\n    } else if (this.props.votes >= 3) {\r\n      return '#FFC107';\r\n    } else if (this.props.votes >= 0) {\r\n      return '#FF9800';\r\n    } else {\r\n      return '#f44336';\r\n    }\r\n  }\r\n\r\n  getEmoji() {\r\n    if (this.props.votes >= 15) {\r\n      return 'em em-rolling_on_the_floor_laughing';\r\n    } else if (this.props.votes >= 12) {\r\n      return 'em em-laughing';\r\n    } else if (this.props.votes >= 9) {\r\n      return 'em em-smiley';\r\n    } else if (this.props.votes >= 6) {\r\n      return 'em em-slightly_smiling_face';\r\n    } else if (this.props.votes >= 3) {\r\n      return 'em em-neutral_face';\r\n    } else if (this.props.votes >= 0) {\r\n      return 'em em-confused';\r\n    } else {\r\n      return 'em em-angry';\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='Joke'>\r\n        <div className='Joke__buttons'>\r\n          <i className='fas fa-arrow-up' onClick={this.props.upvote}></i>\r\n          <span\r\n            className='Joke__votes'\r\n            style={{ borderColor: this.getColor() }}\r\n          >\r\n            {this.props.votes}\r\n          </span>\r\n          <i className='fas fa-arrow-down' onClick={this.props.downvote}></i>\r\n        </div>\r\n        <div className='Joke__text'>{this.props.text}</div>\r\n        <div className='Joke__smiley'>\r\n          <i className={this.getEmoji()} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Joke;\r\n","import React from 'react';\r\nimport './JokeList.css';\r\nimport Joke from './Joke';\r\nimport axios from 'axios';\r\n\r\nconst JOKE_API_URL = 'https://icanhazdadjoke.com/';\r\n\r\nclass JokeList extends React.Component {\r\n  static defaultProps = {\r\n    numJokesToFetch: 10,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // Set jokes to those in our local storage. OR if none exist, parsing \"[]\" means empty array\r\n      jokes: JSON.parse(window.localStorage.getItem('jokes')) || '[]',\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If no jokes\r\n    if (this.state.jokes.length === 0) {\r\n      this.getJokes();\r\n    }\r\n  }\r\n\r\n  async getJokes() {\r\n    const fetchedJokes = [];\r\n\r\n    // Fetch jokes\r\n    while (fetchedJokes.length < this.props.numJokesToFetch) {\r\n      // Have to set a config object with the appropriate headers, as the joke API returns HTML!\r\n      const joke = await axios.get(JOKE_API_URL, {\r\n        headers: { Accept: 'application/json' },\r\n      });\r\n\r\n      // Todo: Prevent duplicate jokes (based on their ID)\r\n      fetchedJokes.push({\r\n        text: joke.data.joke,\r\n        id: joke.data.id,\r\n        votes: 0,\r\n      });\r\n    }\r\n\r\n    // Set state with fetched jokes\r\n    this.setState({ jokes: [...this.state.jokes, ...fetchedJokes] }, () =>\r\n      // Local Storage onlys tores strings -- so convert jokes object to string\r\n      window.localStorage.setItem('jokes', JSON.stringify(this.state.jokes))\r\n    );\r\n  }\r\n\r\n  handleVote(id, delta) {\r\n    const updatedJokes = this.state.jokes.map((joke) =>\r\n      id === joke.id ? { ...joke, votes: joke.votes + delta } : joke\r\n    );\r\n\r\n    this.setState({ jokes: updatedJokes }, () =>\r\n      window.localStorage.setItem('jokes', JSON.stringify(this.state.jokes))\r\n    );\r\n  }\r\n\r\n  handleClick() {\r\n    this.getJokes();\r\n  }\r\n\r\n  render() {\r\n    // const renderedJokes = this.state.jokes.map((joke) => {\r\n    //   return (\r\n    //     <Joke\r\n    //       key={joke.id}\r\n    //       id={joke.id}\r\n    //       text={joke.text}\r\n    //       votes={joke.votes}\r\n    //       upvote={() => this.handleVote(joke.id, 1)}\r\n    //       downvote={() => this.handleVote(joke.id, -1)}\r\n    //     />\r\n    //   );\r\n    // });\r\n\r\n    return (\r\n      <div className='JokeList'>\r\n        <div className='JokeList__sidebar'>\r\n          <h1 className='JokeList__title'>\r\n            <span>Dad</span> Jokes\r\n          </h1>\r\n          <img\r\n            src='https://assets.dryicons.com/uploads/icon/svg/8927/0eb14c71-38f2-433a-bfc8-23d9c99b3647.svg'\r\n            alt='Crying with laughter Emoji'\r\n          />\r\n          <button className='JokeList__btn-jokes' onClick={this.handleClick}>\r\n            New Jokes\r\n          </button>\r\n        </div>\r\n        <div className='JokeList__jokes'>{/* {renderedJokes} */}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default JokeList;\r\n","import './App.css';\nimport JokeList from './JokeList';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <JokeList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}