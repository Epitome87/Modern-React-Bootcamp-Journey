{"version":3,"sources":["Joke.jsx","JokeList.jsx","App.js","reportWebVitals.js","index.js"],"names":["Joke","this","props","votes","className","onClick","upvote","style","borderColor","getColor","downvote","text","getEmoji","React","Component","JokeList","state","jokes","JSON","parse","window","localStorage","getItem","handleClick","bind","length","getJokes","a","fetchedJokes","numJokesToFetch","axios","get","headers","Accept","joke","push","data","id","setState","setItem","stringify","delta","updatedJokes","map","renderedJokes","handleVote","src","alt","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14d2360b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Joke.css';\r\n\r\nclass Joke extends React.Component {\r\n  getColor() {\r\n    if (this.props.votes >= 15) {\r\n      return '#4CAF50';\r\n    } else if (this.props.votes >= 12) {\r\n      return '#8BC34A';\r\n    } else if (this.props.votes >= 9) {\r\n      return '#CDDC39';\r\n    } else if (this.props.votes >= 6) {\r\n      return '#FFEB3B';\r\n    } else if (this.props.votes >= 3) {\r\n      return '#FFC107';\r\n    } else if (this.props.votes >= 0) {\r\n      return '#FF9800';\r\n    } else {\r\n      return '#f44336';\r\n    }\r\n  }\r\n\r\n  getEmoji() {\r\n    if (this.props.votes >= 15) {\r\n      return 'em em-rolling_on_the_floor_laughing';\r\n    } else if (this.props.votes >= 12) {\r\n      return 'em em-laughing';\r\n    } else if (this.props.votes >= 9) {\r\n      return 'em em-smiley';\r\n    } else if (this.props.votes >= 6) {\r\n      return 'em em-slightly_smiling_face';\r\n    } else if (this.props.votes >= 3) {\r\n      return 'em em-neutral_face';\r\n    } else if (this.props.votes >= 0) {\r\n      return 'em em-confused';\r\n    } else {\r\n      return 'em em-angry';\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='Joke'>\r\n        <div className='Joke__buttons'>\r\n          <i className='fas fa-arrow-up' onClick={this.props.upvote}></i>\r\n          <span\r\n            className='Joke__votes'\r\n            style={{ borderColor: this.getColor() }}\r\n          >\r\n            {this.props.votes}\r\n          </span>\r\n          <i className='fas fa-arrow-down' onClick={this.props.downvote}></i>\r\n        </div>\r\n        <div className='Joke__text'>{this.props.text}</div>\r\n        <div className='Joke__smiley'>\r\n          <i className={this.getEmoji()} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Joke;\r\n","import React from 'react';\r\nimport './JokeList.css';\r\nimport Joke from './Joke';\r\nimport axios from 'axios';\r\n\r\nconst JOKE_API_URL = 'https://icanhazdadjoke.com/';\r\n\r\nclass JokeList extends React.Component {\r\n  static defaultProps = {\r\n    numJokesToFetch: 10,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // Set jokes to those in our local storage. OR if none exist, parsing \"[]\" means empty array\r\n      jokes: JSON.parse(window.localStorage.getItem('jokes')) || '[]',\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If no jokes\r\n    if (this.state.jokes.length === 0) {\r\n      this.getJokes();\r\n    }\r\n  }\r\n\r\n  async getJokes() {\r\n    const fetchedJokes = [];\r\n\r\n    // Fetch jokes\r\n    while (fetchedJokes.length < this.props.numJokesToFetch) {\r\n      // Have to set a config object with the appropriate headers, as the joke API returns HTML!\r\n      const joke = await axios.get(JOKE_API_URL, {\r\n        headers: { Accept: 'application/json' },\r\n      });\r\n\r\n      // Todo: Prevent duplicate jokes (based on their ID)\r\n      fetchedJokes.push({\r\n        text: joke.data.joke,\r\n        id: joke.data.id,\r\n        votes: 0,\r\n      });\r\n    }\r\n\r\n    // Set state with fetched jokes\r\n    this.setState({ jokes: [...this.state.jokes, ...fetchedJokes] }, () =>\r\n      // Local Storage onlys tores strings -- so convert jokes object to string\r\n      window.localStorage.setItem('jokes', JSON.stringify(this.state.jokes))\r\n    );\r\n  }\r\n\r\n  handleVote(id, delta) {\r\n    const updatedJokes = this.state.jokes.map((joke) =>\r\n      id === joke.id ? { ...joke, votes: joke.votes + delta } : joke\r\n    );\r\n\r\n    this.setState({ jokes: updatedJokes }, () =>\r\n      window.localStorage.setItem('jokes', JSON.stringify(this.state.jokes))\r\n    );\r\n  }\r\n\r\n  handleClick() {\r\n    this.getJokes();\r\n  }\r\n\r\n  render() {\r\n    const renderedJokes = this.state.jokes.map((joke) => {\r\n      return (\r\n        <Joke\r\n          key={joke.id}\r\n          id={joke.id}\r\n          text={joke.text}\r\n          votes={joke.votes}\r\n          upvote={() => this.handleVote(joke.id, 1)}\r\n          downvote={() => this.handleVote(joke.id, -1)}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className='JokeList'>\r\n        <div className='JokeList__sidebar'>\r\n          <h1 className='JokeList__title'>\r\n            <span>Dad</span> Jokes\r\n          </h1>\r\n          <img\r\n            src='https://assets.dryicons.com/uploads/icon/svg/8927/0eb14c71-38f2-433a-bfc8-23d9c99b3647.svg'\r\n            alt='Crying with laughter Emoji'\r\n          />\r\n          <button className='JokeList__btn-jokes' onClick={this.handleClick}>\r\n            New Jokes\r\n          </button>\r\n        </div>\r\n        <div className='JokeList__jokes'>{renderedJokes}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default JokeList;\r\n","import './App.css';\nimport JokeList from './JokeList';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <JokeList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}